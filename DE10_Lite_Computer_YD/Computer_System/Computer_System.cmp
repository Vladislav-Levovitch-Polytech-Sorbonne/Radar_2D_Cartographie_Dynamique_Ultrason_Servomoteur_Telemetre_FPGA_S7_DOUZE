	component Computer_System is
		port (
			arduino_gpio_export                      : inout std_logic_vector(15 downto 0) := (others => 'X'); -- export
			arduino_reset_n_export                   : out   std_logic;                                        -- export
			avalon_neopixel_output_commande_neopixel : out   std_logic;                                        -- commande_neopixel
			avalon_servomoteur_output_commande       : out   std_logic;                                        -- commande
			avalon_telemetre_output_trig             : out   std_logic;                                        -- trig
			avalon_telemetre_output_echo             : in    std_logic                     := 'X';             -- echo
			avalon_telemetre_output_dist_cm          : out   std_logic_vector(9 downto 0);                     -- dist_cm
			hex3_hex0_export                         : out   std_logic_vector(31 downto 0);                    -- export
			hex5_hex4_export                         : out   std_logic_vector(15 downto 0);                    -- export
			leds_export                              : out   std_logic_vector(9 downto 0);                     -- export
			pushbuttons_export                       : in    std_logic_vector(1 downto 0)  := (others => 'X'); -- export
			sdram_addr                               : out   std_logic_vector(12 downto 0);                    -- addr
			sdram_ba                                 : out   std_logic_vector(1 downto 0);                     -- ba
			sdram_cas_n                              : out   std_logic;                                        -- cas_n
			sdram_cke                                : out   std_logic;                                        -- cke
			sdram_cs_n                               : out   std_logic;                                        -- cs_n
			sdram_dq                                 : inout std_logic_vector(15 downto 0) := (others => 'X'); -- dq
			sdram_dqm                                : out   std_logic_vector(1 downto 0);                     -- dqm
			sdram_ras_n                              : out   std_logic;                                        -- ras_n
			sdram_we_n                               : out   std_logic;                                        -- we_n
			sdram_clk_clk                            : out   std_logic;                                        -- clk
			slider_switches_export                   : in    std_logic_vector(9 downto 0)  := (others => 'X'); -- export
			system_pll_ref_clk_clk                   : in    std_logic                     := 'X';             -- clk
			system_pll_ref_reset_reset               : in    std_logic                     := 'X';             -- reset
			vga_CLK                                  : out   std_logic;                                        -- CLK
			vga_HS                                   : out   std_logic;                                        -- HS
			vga_VS                                   : out   std_logic;                                        -- VS
			vga_BLANK                                : out   std_logic;                                        -- BLANK
			vga_SYNC                                 : out   std_logic;                                        -- SYNC
			vga_R                                    : out   std_logic_vector(3 downto 0);                     -- R
			vga_G                                    : out   std_logic_vector(3 downto 0);                     -- G
			vga_B                                    : out   std_logic_vector(3 downto 0);                     -- B
			video_pll_ref_clk_clk                    : in    std_logic                     := 'X';             -- clk
			video_pll_ref_reset_reset                : in    std_logic                     := 'X'              -- reset
		);
	end component Computer_System;

